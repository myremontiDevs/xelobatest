{"version":3,"file":"static/js/60.6bb19474.chunk.js","mappings":"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","sources":["webpack://frontend/./src/Components/Styles/CraftsmanAuthorization.module.scss?adf8","Components/CraftsmanAuthorization.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"parentContainer\":\"CraftsmanAuthorization_parentContainer__PMhbq\",\"mainContainer\":\"CraftsmanAuthorization_mainContainer__qWazR\",\"header\":\"CraftsmanAuthorization_header__0UsHc\",\"authorization\":\"CraftsmanAuthorization_authorization__vksJ+\",\"authorization__labelContainer\":\"CraftsmanAuthorization_authorization__labelContainer__6TQM4\",\"authorization__input\":\"CraftsmanAuthorization_authorization__input__fAg2-\",\"authorization__button\":\"CraftsmanAuthorization_authorization__button__h5Fv5\",\"authorization__disabledButton\":\"CraftsmanAuthorization_authorization__disabledButton__qy89u\",\"authorization__relativeBox\":\"CraftsmanAuthorization_authorization__relativeBox__YB74H\",\"authorization__errorMessage\":\"CraftsmanAuthorization_authorization__errorMessage__kSw-H\",\"faEye\":\"CraftsmanAuthorization_faEye__jQuS+\"};","\r\n\r\nimport styles from \"./Styles/CraftsmanAuthorization.module.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CraftsmenData from \"./Datas/craftsmenData.json\";\r\nimport { CraftsmenInterface } from \"./Interfaces/CraftsmenDataInterface\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faEye,faEyeSlash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\n\r\ntype FormData = {\r\n  userId: string;\r\n  registrationDate: string;\r\n  verificationStatus: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  personalIdNumber: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  password: string;\r\n  city: string;\r\n  district: string;\r\n  profession: string;\r\n  experience: string;\r\n  price: string;\r\n  minCallFee: string;\r\n  moreInformation: string;\r\n  profilePicture: FileList | null;\r\n};\r\n\r\nfunction useCsrfToken() {\r\n  const [csrfToken, setCsrfToken] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:5500/token.json\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch CSRF token\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"Fetched CSRF Token:\", data.token.csrf_token);\r\n        setCsrfToken(data.token.csrf_token);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching CSRF token:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return csrfToken;\r\n}\r\n\r\n\r\nfunction CraftsmanAuthorization() {\r\n  const csrfToken = useCsrfToken();\r\n  const navigate = useNavigate();\r\n  const data: CraftsmenInterface[] = CraftsmenData;\r\n  const [seePassword, setSeePassword] = useState<boolean>(false);\r\n  const [phoneNumberAuthorization, setPhoneNumberAuthorization] =\r\n    useState<string>(\"\");\r\n  const [passwordAuthorization, setPasswordAuthorization] =\r\n    useState<string>(\"\");\r\n  const [authorizationError, setAuthorizationError] = useState<boolean>(false);\r\n  const [disabledButton, setDisabledButton] = useState<boolean>(false);\r\n  const [otp, setOtp] = useState<number | null>(null);\r\n  const [isOtpSent, setIsOtpSent] = useState<boolean>(false);\r\n  const [enteredOtp, setEnteredOtp] = useState<string>(\"\");\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n\r\n  const sendOtp = async (userPhoneNumber: string) => {\r\n    const verificationCode = Math.floor(100000 + Math.random() * 900000);\r\n    const apiKey = \"f5e53ecd65894293934d40e5c3bcd901\";\r\n    const sender = \"xeloba.ge\";\r\n    const message = `ვერიფიკაციის კოდი: ${verificationCode}`;\r\n\r\n    const url = `http://smsoffice.ge/api/v2/send/?key=${apiKey}&destination=${userPhoneNumber}&sender=${sender}&content=${message}&urgent=true`;\r\n    console.log(verificationCode);\r\n    setOtp(verificationCode);\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data.Success) {\r\n        return verificationCode;\r\n      } else {\r\n        console.error(\"Failed to send OTP:\", data.Message);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending OTP:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n  } = useForm<FormData>();\r\n  \r\n  const user = data.find(\r\n    (craftsman) =>\r\n      craftsman.phoneNumber === phoneNumberAuthorization &&\r\n      craftsman.password === passwordAuthorization\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // setUserData(user);\r\n\r\n      for (const [key, value] of Object.entries(user)) {\r\n        setValue(key as keyof FormData, value as any);\r\n      }\r\n\r\n    }\r\n  }, [user, setValue]);\r\n\r\n\r\n\r\n \r\n  const handleLogin = () => {\r\n    const user = data.find(\r\n      (craftsman) =>\r\n        craftsman.phoneNumber === phoneNumberAuthorization &&\r\n        craftsman.password === passwordAuthorization\r\n    );\r\n\r\n    if (user) {\r\n      setAuthorizationError(false);\r\n      if (user.verificationStatus === \"false\") {\r\n        sendOtp(user.phoneNumber);\r\n        setIsOtpSent(true);\r\n      } else {\r\n        navigate(`/personalPage/${user.userId}`);\r\n      }\r\n    } else {\r\n      setAuthorizationError(true);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = () => {\r\n    const user = data.find(\r\n      (craftsman) =>\r\n        craftsman.phoneNumber === phoneNumberAuthorization &&\r\n        craftsman.password === passwordAuthorization\r\n    );\r\n\r\n    if (user && parseInt(enteredOtp) === otp) {\r\n      console.log(\"Phone number verified successfully!\");\r\n      formRef.current?.submit();\r\n      navigate(`/personalPage/${user.userId}`);\r\n    }\r\n  };\r\n\r\n\r\n///\r\nconst onSubmit: SubmitHandler<FormData> = (data) => {\r\n  verifyOtp();\r\n  \r\n console.log('newdata',data)\r\n};\r\n\r\n\r\n//\r\n  useEffect(() => {\r\n    if (phoneNumberAuthorization === \"\" || passwordAuthorization === \"\") {\r\n      setDisabledButton(true);\r\n    } else {\r\n      setDisabledButton(false);\r\n    }\r\n  }, [phoneNumberAuthorization, passwordAuthorization]);\r\n\r\n  const handleSeePassword = () => setSeePassword(!seePassword);\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.parentContainer}>\r\n      {!isOtpSent \r\n      ?\r\n      <div className={styles.mainContainer}>\r\n        <h2 className={styles.header}>ავტორიზაცია</h2>\r\n        <div className={styles.authorization}>\r\n          <div className={styles.authorization__labelContainer}>\r\n            <label\r\n              htmlFor=\"phoneNumber\"\r\n              className={styles.authorization__label}\r\n            >\r\n              ტელეფონის ნომერი\r\n            </label>\r\n          </div>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            id=\"phoneNumber\"\r\n            className={styles.authorization__input}\r\n            onChange={(e) => {\r\n              setPhoneNumberAuthorization(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <div className={styles.authorization__labelContainer}>\r\n            <label htmlFor=\"password\" className={styles.authorization__label}>\r\n              პაროლი\r\n             \r\n            </label>\r\n          </div>\r\n\r\n<div className={styles.authorization__relativeBox}>\r\n  \r\n          <input\r\n            type={seePassword ? \"text\" : \"password\"}\r\n            name=\"password\"\r\n            id=\"password\"\r\n            className={styles.authorization__input}\r\n            onChange={(e) => {\r\n              setPasswordAuthorization(e.target.value);\r\n            }}\r\n          />\r\n           <FontAwesomeIcon\r\n                    icon={seePassword ? faEye : faEyeSlash}\r\n                    className={styles.faEye}\r\n                    onClick={handleSeePassword}\r\n                  />\r\n\r\n          </div>\r\n          {authorizationError && (\r\n            <p className={styles.authorization__errorMessage}>\r\n              მომხმარებლის ნომერი ან პაროლი არასწორია\r\n            </p>\r\n          )}\r\n\r\n         \r\n          {disabledButton ? (\r\n            <button disabled className={styles.authorization__disabledButton}>\r\n              შესვლა\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className={styles.authorization__button}\r\n              onClick={handleLogin}\r\n            >\r\n              შესვლა\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      :\r\n    <form onSubmit={handleSubmit(onSubmit)} \r\n     method=\"post\"\r\n          action=\"/reg\"\r\n    >\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} />\r\n      <div className={styles.inputContainer}>\r\n      <div className={styles.labelContainer}>\r\n        <label htmlFor=\"verification\">შეიყვანე ვერიფიკაციის კოდი</label>\r\n      </div>\r\n      <input\r\n        id=\"verification\"\r\n        type=\"number\"\r\n        value={enteredOtp}\r\n        onChange={(e) => setEnteredOtp(e.target.value)}\r\n        className={styles.formInput}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"-\" || e.key === \"E\" || e.key === \"e\") {\r\n            e.preventDefault();\r\n          }\r\n        }}\r\n      />\r\n    <input type=\"text\" {...register(\"verificationStatus\")} />\r\n      <button type=\"submit\">verification</button>\r\n    </div>\r\n    </form>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CraftsmanAuthorization;\r\n\r\n\r\n\r\n"],"names":["csrfToken","setCsrfToken","useState","useEffect","fetch","then","response","ok","Error","json","data","console","log","token","csrf_token","catch","error","useCsrfToken","navigate","useNavigate","CraftsmenData","seePassword","setSeePassword","phoneNumberAuthorization","setPhoneNumberAuthorization","passwordAuthorization","setPasswordAuthorization","authorizationError","setAuthorizationError","disabledButton","setDisabledButton","otp","setOtp","isOtpSent","setIsOtpSent","enteredOtp","setEnteredOtp","formRef","useRef","register","handleSubmit","setValue","useForm","user","find","craftsman","phoneNumber","password","key","value","Object","entries","verifyOtp","_formRef$current","parseInt","current","submit","concat","userId","_jsx","className","styles","parentContainer","children","_jsxs","onSubmit","method","action","type","name","inputContainer","labelContainer","htmlFor","id","onChange","e","target","formInput","onKeyDown","preventDefault","mainContainer","header","authorization","authorization__labelContainer","authorization__label","authorization__input","authorization__relativeBox","FontAwesomeIcon","icon","faEye","faEyeSlash","onClick","handleSeePassword","authorization__errorMessage","disabled","authorization__disabledButton","authorization__button","handleLogin","verificationStatus","async","verificationCode","Math","floor","random","message","url","userPhoneNumber","Success","Message","sendOtp"],"sourceRoot":""}